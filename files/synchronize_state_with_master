#!/bin/python

import os;

SLAVE_USER = "slave_user";
SLAVE_PASSWORD = "slave_user";

def configureSlaveForReplication():
	importDatabaseDumps();
	setMaster();
	startSlave();

#TESTED
def importDatabaseDumps():
	databaseNames = getDatabaseNames();
	for database in databaseNames:
		createDbCommand = "CREATE DATABASE IF NOT EXISTS " + database + ";";
		executeCommandInMysqlShell(createDbCommand);
		importDumpCommand = "mysql -u root " + database + " < /tmp/" + database + ".sql";
		os.popen(importDumpCommand);

def setMaster():
	masterIp = getMasterIpFromConfigFile();
	positionInBinLog = getPositionInBinLog();
	binLogFileName = getBinLogFileName();
	command = "CHANGE MASTER TO MASTER_HOST='" + masterIp  + "',"; 
	command += "MASTER_USER='" + SLAVE_USER + "',";
	command += "MASTER_PASSWORD='" + SLAVE_PASSWORD + "',"; 
	command += "MASTER_LOG_FILE='" + binLogFileName  + "',"; 
	command += "MASTER_LOG_POS=" + positionInBinLog + ";";
	executeCommandInMysqlShell(command);

#TESTED
def startSlave():
	executeCommandInMysqlShell("START SLAVE");

#TESTED
def executeCommandInMysqlShell(mysqlCommand):
        shellCommand = "/usr/bin/mysql -uroot -s -e \"" + mysqlCommand  + "\"";
        return os.popen(shellCommand).read();

#TESTED
def getDatabaseNames():
	filestream = open("/etc/sysconfig/mysql","r");
        databases = set();
        for line in filestream:
                if (line.find("hasdb") != -1):
                        line.strip("\n ");
                        database = line.split(" ")[1];
                        database = database.strip(" ");
                        databases.add(database);
        filestream.close();
        return databases;

#TESTED
def getBinLogFileName():
	filestream = open("/tmp/master_status","r");
	line = filestream.readline();
	line = line.split("&")[0];
	line = line.strip("\n ");
	filestream.close();
	return line;

#TESTED
def getPositionInBinLog():
	filestream = open("/tmp/master_status","r");
	line = filestream.readline();
	line = line.split("&")[1];
	line = line.strip("\n ");
	filestream.close();
	return line;

#TESTED
def getMasterIpFromConfigFile():
	filestream = open("/etc/sysconfig/mysqlCluster","r");
	result = "";
	for line in filestream:
		if (line.find("master") != -1):
			line = line.strip("\n ");
			line = line.split(" ")[1];
			result = line.strip(" ");
	filestream.close();
	if not result:
		raise "No master entry found in config file /etc/sysconfig/mysqlCluster";
	return result;

configureSlaveForReplication();

#TODO add server restart
